# IMPORTANT: This file is generated by cucumber-rails - edit at your own peril.
# It is recommended to regenerate this file in the future when you upgrade to a
# newer version of cucumber-rails. Consider adding your own code to a new file
# instead of editing this one. Cucumber will automatically load all capybara_features/**/*.rb
# files.

require 'uri'
require File.expand_path(File.join(File.dirname(__FILE__), "..", "support", "paths"))

module WithinHelpers
  def with_scope(locator)
    locator ? within(:css, locator) { yield } : yield
  end
end
World(WithinHelpers)

Given /^(?:|I )am on (.+)$/ do |page_name|
  visit path_to(page_name)
end

When /^(?:|I )press "([^\"]*)"(?: within "([^\"]*)")?$/ do |button, selector|
  with_scope(selector) do
    click_button(button)
  end
end

When /^I search$/ do
  find("//input[@value='Search']").click
end

When /^(?:|I )(?:can )?click "([^\"]*)"(?: within "([^\"]*)")?$/ do |selector, within|
  with_scope(within) do
    find(selector).click
  end
end

When /^(?:|I )fill in "([^\"]*)" with "([^\"]*)"(?: within "([^\"]*)")?$/ do |field, value, selector|
  with_scope(selector) do
    fill_in(field, :visible => true, :with => value)
  end
end

#When /^I cannot follow "([^\"]*)"(?: within "([^\"]*)")?$/ do |link, selector|
#  exception=nil
#  begin
#    with_scope(selector) do
#      click_link(link)
#    end
#  rescue Exception=>e
#    exception=e
#  end
#  exception.should_not be_nil
#  exception.class.should==Capybara::ElementNotFound
#end
#
#When /^(?:|I ) select "([^\"]*)" for "([^\"]*)"$/ do |value, field|
#  page.execute_script "$('#{field}').trigger('focus')"
#  page.execute_script "$('a.ui-datepicker-next').trigger('click')"
#  page.execute_script "$(\"a.ui-state-default:contains('15')\").trigger(\"click\")"
#end

# TODO: Add support for checkbox, select og option
# based on naming conventions.
#
When /^(?:|I )fill in the following(?: within "([^\"]*)")?:$/ do |selector, fields|
  with_scope(selector) do
    fields.rows_hash.each do |name, value|
      step %{I fill in "#{name}" with "#{value}"}
    end
  end
end

When /^(?:|I )select "([^\"]*)" from "([^\"]*)"(?: within "([^\"]*)")?$/ do |value, field, selector|
  with_scope(selector) do
    select(value, :from => field)
  end
end

When /^(?:|I )(?:can )?check "([^\"]*)"(?: within "([^\"]*)")?$/ do |field, selector|
  with_scope(selector) do
    check(field)
  end
end

When /^(?:|I )uncheck "([^\"]*)"(?: within "([^\"]*)")?$/ do |field, selector|
  with_scope(selector) do
    uncheck(field)
  end
end

When /^(?:|I )(?:can )?choose "([^\"]*)"(?: within "([^\"]*)")?$/ do |field, selector|
  with_scope(selector) do
    choose(field)
  end
end

When /^(?:|I )attach the file "([^\"]*)" to "([^\"]*)"(?: within "([^\"]*)")?$/ do |path, field, selector|
  with_scope(selector) do
    attach_file(field, path)
  end
end


Then /^show me the page$/ do
  save_and_open_page
end

When /^I fill in a (\d+) character long string for "([^"]*)"$/ do |length, field|
  fill_in field, :with=>("x" * length.to_i)
end

When /^(?:|I )select "([^\"]*)"(?: within "([^\"]*)")? for language change$/ do |button, selector|
  with_scope(selector) do
    find("//input[@class='btn_submit']").click
  end
end


And /^I submit the form$/ do
  click_button('Save')
end

When /^I clear the search results$/ do
  click_button("reset")
end

When /^I goto the "(.*?)"$/ do |text|
  find(:xpath,"//a[@class='"+text+"']").click
end

When /^(?:|I )select "([^\"]*)"(?: within "([^\"]*)")?$/ do |button, selector|
  with_scope(selector) do
    find("//input[@class='btn_submit']").click
  end
end

When /^I go and press "([^"]*)"$/ do |arg|
  find("//input[@class='btn_submit']").click
end

When /^I select the "([^"]*)"$/ do |element|
  find("//div[@class='"+element+"']").click
end

When /^I can download the "([^"]*)"$/ do |item|
  find("//a[@id='"+item+"']").click
end

When /^(?:|I )(?:can )?follow "([^\"]*)"(?: within "([^\"]*)")?$/ do |link, selector|
  with_scope(selector) do
    page.should have_link(link)
    click_link(link)
  end
end


